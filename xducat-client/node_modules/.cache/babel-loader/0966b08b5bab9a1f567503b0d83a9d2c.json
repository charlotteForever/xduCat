{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nimport _imports_0 from '../../img/1.jpg';\nconst _hoisted_1 = [\"src\"];\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: _imports_0,\n  alt: \"\"\n}, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cats, item => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: item\n    }, [_createElementVNode(\"td\", null, _toDisplayString(item.color), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(item.location), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, [_createElementVNode(\"img\", {\n      src: item.img,\n      alt: \"\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_1)])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]), _hoisted_2], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";OAQQA,gBAAqB;;;gCAA1BC,oBAAmC,KAAnC,EAAmC;AAA9BC,KAAqB,EAArBF,UAA8B;AAARG,KAAG,EAAC;AAAI,CAAnC;;AAAA;;;6DAPDF,oBAMQ,OANR,EAMQ,IANR,EAMQ,oBALNG,oBAIKC,SAJL,EAIK,IAJL,EAIKC,YAJcC,UAId,EAJMC,IAAY,IAAR;yBAAfJ,oBAIK,IAJL,EAIK;AAJqBK,SAAG,EAAED;AAI1B,KAJL,EAAmC,CACjCP,oBAAyB,IAAzB,EAAyB,IAAzB,EAAyBS,iBAAlBF,IAAI,CAACG,KAAa,CAAzB,EAAiB;AAAA;AAAjB,KADiC,EAEjCV,oBAA4B,IAA5B,EAA4B,IAA5B,EAA4BS,iBAArBF,IAAI,CAACI,QAAgB,CAA5B,EAAoB;AAAA;AAApB,KAFiC,EAGjCX,oBAAoC,IAApC,EAAoC,IAApC,EAAoC,CAA/BA,oBAAyB,KAAzB,EAAyB;AAAnBC,SAAG,EAAEM,IAAI,CAACK,GAAS;AAAJV,SAAG,EAAH;AAAI,KAAzB;;AAAA,iBAA+B,CAApC,CAHiC,CAAnC;GAIK,CAJL;;AAAA,GAKM,EANR,GAOCW","names":["_imports_0","_createElementVNode","src","alt","_createElementBlock","_Fragment","_renderList","$data","item","key","_toDisplayString","color","location","img","_hoisted_2"],"sourceRoot":"","sources":["F:\\XDUcat\\XDUcat-client\\src\\views\\SearchResultView.vue"],"sourcesContent":["<template>\r\n  <table>\r\n    <tr v-for=\"item in cats\" :key=\"item\">\r\n      <td>{{ item.color }}</td>\r\n      <td>{{ item.location }}</td>\r\n      <td> <img :src=\"item.img\" alt> </td>\r\n    </tr>\r\n  </table>\r\n   <img src='../../img/1.jpg' alt=''/>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      cats: [],\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.getResult();\r\n  },\r\n\r\n  methods: {\r\n    getResult() {\r\n      this.$axios\r\n        .post(\r\n          \"http://localhost:8888/cat/findCatByColor/\" + this.$route.query.color\r\n        )\r\n        .then((resp) => {\r\n          this.cats = resp.data;\r\n        });\r\n    },\r\n  },\r\n\r\n    // 当输入的猫改变时，这里刷新页面\r\n    // 这里写的很复杂是因为为了让刷新页面自然些\r\n  watch: {\r\n    $route: {\r\n      handler: function (val, oldVal) {\r\n          if(val.path == oldVal.path)\r\n          {\r\n              if(val.query.color != oldVal.query.color){\r\n                  this.$router.replace(\"/refresh\");\r\n              }\r\n          }\r\n      },\r\n    },\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}