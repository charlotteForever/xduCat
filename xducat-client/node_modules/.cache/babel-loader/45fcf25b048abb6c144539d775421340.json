{"ast":null,"code":"import ResizeObserver from 'resize-observer-polyfill';\nimport isServer from './isServer';\n\nconst resizeHandler = function (entries) {\n  for (const entry of entries) {\n    const listeners = entry.target.__resizeListeners__ || [];\n\n    if (listeners.length) {\n      listeners.forEach(fn => {\n        fn();\n      });\n    }\n  }\n};\n\nconst addResizeListener = function (element, fn) {\n  if (isServer || !element) return;\n\n  if (!element.__resizeListeners__) {\n    element.__resizeListeners__ = [];\n    element.__ro__ = new ResizeObserver(resizeHandler);\n\n    element.__ro__.observe(element);\n  }\n\n  element.__resizeListeners__.push(fn);\n};\n\nconst removeResizeListener = function (element, fn) {\n  if (!element || !element.__resizeListeners__) return;\n\n  element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n\n  if (!element.__resizeListeners__.length) {\n    element.__ro__.disconnect();\n  }\n};\n\nexport { addResizeListener, removeResizeListener };","map":{"version":3,"sources":["D:/A-大三下/web开发/xducat/xducat-client/node_modules/element-plus/es/utils/resize-event.js"],"names":["ResizeObserver","isServer","resizeHandler","entries","entry","listeners","target","__resizeListeners__","length","forEach","fn","addResizeListener","element","__ro__","observe","push","removeResizeListener","splice","indexOf","disconnect"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0BAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,aAAa,GAAG,UAAUC,OAAV,EAAmB;AACrC,OAAK,MAAMC,KAAX,IAAoBD,OAApB,EAA6B;AACzB,UAAME,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAaC,mBAAb,IAAoC,EAAtD;;AACA,QAAIF,SAAS,CAACG,MAAd,EAAsB;AAClBH,MAAAA,SAAS,CAACI,OAAV,CAAkBC,EAAE,IAAI;AACpBA,QAAAA,EAAE;AACL,OAFD;AAGH;AACJ;AACJ,CATD;;AAUA,MAAMC,iBAAiB,GAAG,UAAUC,OAAV,EAAmBF,EAAnB,EAAuB;AAC7C,MAAIT,QAAQ,IAAI,CAACW,OAAjB,EACI;;AACJ,MAAI,CAACA,OAAO,CAACL,mBAAb,EAAkC;AAC9BK,IAAAA,OAAO,CAACL,mBAAR,GAA8B,EAA9B;AACAK,IAAAA,OAAO,CAACC,MAAR,GAAiB,IAAIb,cAAJ,CAAmBE,aAAnB,CAAjB;;AACAU,IAAAA,OAAO,CAACC,MAAR,CAAeC,OAAf,CAAuBF,OAAvB;AACH;;AACDA,EAAAA,OAAO,CAACL,mBAAR,CAA4BQ,IAA5B,CAAiCL,EAAjC;AACH,CATD;;AAUA,MAAMM,oBAAoB,GAAG,UAAUJ,OAAV,EAAmBF,EAAnB,EAAuB;AAChD,MAAI,CAACE,OAAD,IAAY,CAACA,OAAO,CAACL,mBAAzB,EACI;;AACJK,EAAAA,OAAO,CAACL,mBAAR,CAA4BU,MAA5B,CAAmCL,OAAO,CAACL,mBAAR,CAA4BW,OAA5B,CAAoCR,EAApC,CAAnC,EAA4E,CAA5E;;AACA,MAAI,CAACE,OAAO,CAACL,mBAAR,CAA4BC,MAAjC,EAAyC;AACrCI,IAAAA,OAAO,CAACC,MAAR,CAAeM,UAAf;AACH;AACJ,CAPD;;AASA,SAASR,iBAAT,EAA4BK,oBAA5B","sourcesContent":["import ResizeObserver from 'resize-observer-polyfill';\nimport isServer from './isServer';\n\nconst resizeHandler = function (entries) {\n    for (const entry of entries) {\n        const listeners = entry.target.__resizeListeners__ || [];\n        if (listeners.length) {\n            listeners.forEach(fn => {\n                fn();\n            });\n        }\n    }\n};\nconst addResizeListener = function (element, fn) {\n    if (isServer || !element)\n        return;\n    if (!element.__resizeListeners__) {\n        element.__resizeListeners__ = [];\n        element.__ro__ = new ResizeObserver(resizeHandler);\n        element.__ro__.observe(element);\n    }\n    element.__resizeListeners__.push(fn);\n};\nconst removeResizeListener = function (element, fn) {\n    if (!element || !element.__resizeListeners__)\n        return;\n    element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);\n    if (!element.__resizeListeners__.length) {\n        element.__ro__.disconnect();\n    }\n};\n\nexport { addResizeListener, removeResizeListener };\n"]},"metadata":{},"sourceType":"module"}