{"ast":null,"code":"import { toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(_toDisplayString(this.$route.query.id) + \" \", 1\n  /* TEXT */\n  ), _createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.comments, item => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: item\n    }, _toDisplayString(item.name) + \" \" + _toDisplayString(item.comment) + \" \" + _toDisplayString(item.date), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;oGACUA,OAAOC,MAAMC,MAAK,KAExB;AAAA;KAAAC,oBAOQ,OAPR,EAOQ,IAPR,EAOQ,oBANJC,oBAKKC,SALL,EAKK,IALL,EAKKC,YALcC,cAKd,EALMC,IAAgB,IAAZ;yBAAfJ,oBAKK,IALL,EAKK;AALyBK,SAAG,EAAED;AAK9B,KALL,EAAuCE,iBACrCF,IAAI,CAACG,IADgC,IAC1B,GAD0B,GAEvCD,iBAAEF,IAAI,CAACI,OAAP,CAFuC,GAEvB,GAFuB,GAGvCF,iBAAEF,IAAI,CAACK,IAAP,CAHA,EAGW;AAAA;AAHX;GAKK,CALL;;AAAA,GAMI,EAPR","names":["$route","query","id","_createElementVNode","_createElementBlock","_Fragment","_renderList","$data","item","key","_toDisplayString","name","comment","date"],"sourceRoot":"","sources":["F:\\XDUcat\\XDUcat-client\\src\\views\\CatDetailView.vue"],"sourcesContent":["<template>\r\n  {{ this.$route.query.id }}\r\n\r\n    <table>\r\n        <tr v-for=\"item in comments\" :key=\"item\">\r\n        {{item.name}}\r\n        {{item.comment}}\r\n        {{item.date}}\r\n        \r\n        </tr>\r\n    </table>\r\n\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      comments: [],\r\n    };\r\n  },\r\n  created(){\r\n      this.getComments();\r\n  },\r\n  methods: {\r\n    getComments() {\r\n      this.$axios\r\n        .post(\"http://localhost:8888/comment/findCommentByCatId/\" + this.$route.query.id)\r\n        .then((resp) => {this.comments = resp.data;});\r\n    for(var i=0;i<this.comments.length;i++){\r\n        console.log(this.comments[i].name);\r\n        if(this.comments[i].name===null)this.comments[i].name=\"匿名同学\";\r\n    }\r\n    },\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}