{"ast":null,"code":"import { defineComponent, h, inject, computed, resolveComponent, openBlock, createBlock, createCommentVNode, withModifiers, withCtx, createVNode, Fragment, getCurrentInstance, ref, renderList, toDisplayString, provide, reactive, watch, onBeforeUpdate, onMounted, nextTick } from 'vue';\nimport ElScrollbar from '../el-scrollbar';\nimport ElCheckbox from '../el-checkbox';\nimport ElRadio from '../el-radio';\nimport { useLocaleInject } from '../hooks';\nimport { generateId, isEmpty, isUndefined, capitalize, deduplicate, arrayFlat, coerceTruthyValueToArray } from '../utils/util';\nimport isEqual from 'lodash/isEqual';\nimport { EVENT_CODE } from '../utils/aria';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../utils/constants';\nimport isServer from '../utils/isServer';\nimport scrollIntoView from '../utils/scroll-into-view';\nvar ExpandTrigger;\n\n(function (ExpandTrigger2) {\n  ExpandTrigger2[\"CLICK\"] = \"click\";\n  ExpandTrigger2[\"HOVER\"] = \"hover\";\n})(ExpandTrigger || (ExpandTrigger = {}));\n\nconst CASCADER_PANEL_INJECTION_KEY = Symbol();\nvar script = defineComponent({\n  name: \"ElCascaderNode\",\n  components: {\n    ElCheckbox,\n    ElRadio,\n    NodeContent: {\n      render() {\n        const {\n          node,\n          panel\n        } = this.$parent;\n        const {\n          data,\n          label\n        } = node;\n        const {\n          renderLabelFn\n        } = panel;\n        return h(\"span\", {\n          class: \"el-cascader-node__label\"\n        }, renderLabelFn ? renderLabelFn({\n          node,\n          data\n        }) : label);\n      }\n\n    }\n  },\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    menuId: String\n  },\n  emits: [\"expand\"],\n\n  setup(props, {\n    emit\n  }) {\n    const panel = inject(CASCADER_PANEL_INJECTION_KEY);\n    const isHoverMenu = computed(() => panel.isHoverMenu);\n    const multiple = computed(() => panel.config.multiple);\n    const checkStrictly = computed(() => panel.config.checkStrictly);\n    const checkedNodeId = computed(() => {\n      var _a;\n\n      return (_a = panel.checkedNodes[0]) == null ? void 0 : _a.uid;\n    });\n    const isDisabled = computed(() => props.node.isDisabled);\n    const isLeaf = computed(() => props.node.isLeaf);\n    const expandable = computed(() => checkStrictly.value && !isLeaf.value || !isDisabled.value);\n    const inExpandingPath = computed(() => isInPath(panel.expandingNode));\n    const inCheckedPath = computed(() => checkStrictly.value && panel.checkedNodes.some(isInPath));\n\n    const isInPath = node => {\n      var _a;\n\n      const {\n        level,\n        uid\n      } = props.node;\n      return ((_a = node == null ? void 0 : node.pathNodes[level - 1]) == null ? void 0 : _a.uid) === uid;\n    };\n\n    const doExpand = () => {\n      if (inExpandingPath.value) return;\n      panel.expandNode(props.node);\n    };\n\n    const doCheck = checked => {\n      const {\n        node\n      } = props;\n      if (checked === node.checked) return;\n      panel.handleCheckChange(node, checked);\n    };\n\n    const doLoad = () => {\n      panel.lazyLoad(props.node, () => {\n        if (!isLeaf.value) doExpand();\n      });\n    };\n\n    const handleHoverExpand = e => {\n      if (!isHoverMenu.value) return;\n      handleExpand();\n      !isLeaf.value && emit(\"expand\", e);\n    };\n\n    const handleExpand = () => {\n      const {\n        node\n      } = props;\n      if (!expandable.value || node.loading) return;\n      node.loaded ? doExpand() : doLoad();\n    };\n\n    const handleClick = () => {\n      if (isHoverMenu.value && !isLeaf.value) return;\n\n      if (isLeaf.value && !isDisabled.value && !checkStrictly.value && !multiple.value) {\n        handleCheck(true);\n      } else {\n        handleExpand();\n      }\n    };\n\n    const handleCheck = checked => {\n      if (!props.node.loaded) {\n        doLoad();\n      } else {\n        doCheck(checked);\n        !checkStrictly.value && doExpand();\n      }\n    };\n\n    return {\n      panel,\n      isHoverMenu,\n      multiple,\n      checkStrictly,\n      checkedNodeId,\n      isDisabled,\n      isLeaf,\n      expandable,\n      inExpandingPath,\n      inCheckedPath,\n      handleHoverExpand,\n      handleExpand,\n      handleClick,\n      handleCheck\n    };\n  }\n\n});\n\nconst _hoisted_1 = /* @__PURE__ */createVNode(\"span\", null, null, -1);\n\nconst _hoisted_2 = {\n  key: 2,\n  class: \"el-icon-check el-cascader-node__prefix\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"el-icon-loading el-cascader-node__postfix\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"el-icon-arrow-right el-cascader-node__postfix\"\n};\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_checkbox = resolveComponent(\"el-checkbox\");\n\n  const _component_el_radio = resolveComponent(\"el-radio\");\n\n  const _component_node_content = resolveComponent(\"node-content\");\n\n  return openBlock(), createBlock(\"li\", {\n    id: `${_ctx.menuId}-${_ctx.node.uid}`,\n    role: \"menuitem\",\n    \"aria-haspopup\": !_ctx.isLeaf,\n    \"aria-owns\": _ctx.isLeaf ? null : _ctx.menuId,\n    \"aria-expanded\": _ctx.inExpandingPath,\n    tabindex: _ctx.expandable ? -1 : null,\n    class: [\"el-cascader-node\", _ctx.checkStrictly && \"is-selectable\", _ctx.inExpandingPath && \"in-active-path\", _ctx.inCheckedPath && \"in-checked-path\", _ctx.node.checked && \"is-active\", !_ctx.expandable && \"is-disabled\"],\n    onMouseenter: _cache[3] || (_cache[3] = (...args) => _ctx.handleHoverExpand && _ctx.handleHoverExpand(...args)),\n    onFocus: _cache[4] || (_cache[4] = (...args) => _ctx.handleHoverExpand && _ctx.handleHoverExpand(...args)),\n    onClick: _cache[5] || (_cache[5] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n  }, [createCommentVNode(\" prefix \"), _ctx.multiple ? (openBlock(), createBlock(_component_el_checkbox, {\n    key: 0,\n    \"model-value\": _ctx.node.checked,\n    indeterminate: _ctx.node.indeterminate,\n    disabled: _ctx.isDisabled,\n    onClick: _cache[1] || (_cache[1] = withModifiers(() => {}, [\"stop\"])),\n    \"onUpdate:modelValue\": _ctx.handleCheck\n  }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onUpdate:modelValue\"])) : _ctx.checkStrictly ? (openBlock(), createBlock(_component_el_radio, {\n    key: 1,\n    \"model-value\": _ctx.checkedNodeId,\n    label: _ctx.node.uid,\n    disabled: _ctx.isDisabled,\n    \"onUpdate:modelValue\": _ctx.handleCheck,\n    onClick: _cache[2] || (_cache[2] = withModifiers(() => {}, [\"stop\"]))\n  }, {\n    default: withCtx(() => [createCommentVNode(\"\\n        Add an empty element to avoid render label,\\n        do not use empty fragment here for https://github.com/vuejs/vue-next/pull/2485\\n      \"), _hoisted_1]),\n    _: 1\n  }, 8, [\"model-value\", \"label\", \"disabled\", \"onUpdate:modelValue\"])) : _ctx.isLeaf && _ctx.node.checked ? (openBlock(), createBlock(\"i\", _hoisted_2)) : createCommentVNode(\"v-if\", true), createCommentVNode(\" content \"), createVNode(_component_node_content), createCommentVNode(\" postfix \"), !_ctx.isLeaf ? (openBlock(), createBlock(Fragment, {\n    key: 3\n  }, [_ctx.node.loading ? (openBlock(), createBlock(\"i\", _hoisted_3)) : (openBlock(), createBlock(\"i\", _hoisted_4))], 2112)) : createCommentVNode(\"v-if\", true)], 42, [\"id\", \"aria-haspopup\", \"aria-owns\", \"aria-expanded\", \"tabindex\"]);\n}\n\nscript.render = render;\nscript.__file = \"packages/cascader-panel/src/node.vue\";\nvar script$1 = defineComponent({\n  name: \"ElCascaderMenu\",\n  components: {\n    ElScrollbar,\n    ElCascaderNode: script\n  },\n  props: {\n    nodes: {\n      type: Array,\n      required: true\n    },\n    index: {\n      type: Number,\n      required: true\n    }\n  },\n\n  setup(props) {\n    const instance = getCurrentInstance();\n    const {\n      t\n    } = useLocaleInject();\n    const id = generateId();\n    let activeNode = null;\n    let hoverTimer = null;\n    const panel = inject(CASCADER_PANEL_INJECTION_KEY);\n    const hoverZone = ref(null);\n    const isEmpty = computed(() => !props.nodes.length);\n    const menuId = computed(() => `cascader-menu-${id}-${props.index}`);\n\n    const handleExpand = e => {\n      activeNode = e.target;\n    };\n\n    const handleMouseMove = e => {\n      if (!panel.isHoverMenu || !activeNode || !hoverZone.value) return;\n\n      if (activeNode.contains(e.target)) {\n        clearHoverTimer();\n        const el = instance.vnode.el;\n        const {\n          left\n        } = el.getBoundingClientRect();\n        const {\n          offsetWidth,\n          offsetHeight\n        } = el;\n        const startX = e.clientX - left;\n        const top = activeNode.offsetTop;\n        const bottom = top + activeNode.offsetHeight;\n        hoverZone.value.innerHTML = `\n          <path style=\"pointer-events: auto;\" fill=\"transparent\" d=\"M${startX} ${top} L${offsetWidth} 0 V${top} Z\" />\n          <path style=\"pointer-events: auto;\" fill=\"transparent\" d=\"M${startX} ${bottom} L${offsetWidth} ${offsetHeight} V${bottom} Z\" />\n        `;\n      } else if (!hoverTimer) {\n        hoverTimer = window.setTimeout(clearHoverZone, panel.config.hoverThreshold);\n      }\n    };\n\n    const clearHoverTimer = () => {\n      if (!hoverTimer) return;\n      clearTimeout(hoverTimer);\n      hoverTimer = null;\n    };\n\n    const clearHoverZone = () => {\n      if (!hoverZone.value) return;\n      hoverZone.value.innerHTML = \"\";\n      clearHoverTimer();\n    };\n\n    return {\n      panel,\n      hoverZone,\n      isEmpty,\n      menuId,\n      t,\n      handleExpand,\n      handleMouseMove,\n      clearHoverZone\n    };\n  }\n\n});\nconst _hoisted_1$1 = {\n  key: 0,\n  class: \"el-cascader-menu__empty-text\"\n};\nconst _hoisted_2$1 = {\n  key: 1,\n  ref: \"hoverZone\",\n  class: \"el-cascader-menu__hover-zone\"\n};\n\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_cascader_node = resolveComponent(\"el-cascader-node\");\n\n  const _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n\n  return openBlock(), createBlock(_component_el_scrollbar, {\n    id: _ctx.menuId,\n    tag: \"ul\",\n    role: \"menu\",\n    class: \"el-cascader-menu\",\n    \"wrap-class\": \"el-cascader-menu__wrap\",\n    \"view-class\": [\"el-cascader-menu__list\", _ctx.isEmpty && \"is-empty\"],\n    onMousemove: _ctx.handleMouseMove,\n    onMouseleave: _ctx.clearHoverZone\n  }, {\n    default: withCtx(() => [(openBlock(true), createBlock(Fragment, null, renderList(_ctx.nodes, node => {\n      return openBlock(), createBlock(_component_el_cascader_node, {\n        key: node.uid,\n        node,\n        \"menu-id\": _ctx.menuId,\n        onExpand: _ctx.handleExpand\n      }, null, 8, [\"node\", \"menu-id\", \"onExpand\"]);\n    }), 128)), _ctx.isEmpty ? (openBlock(), createBlock(\"div\", _hoisted_1$1, toDisplayString(_ctx.t(\"el.cascader.noData\")), 1)) : _ctx.panel.isHoverMenu ? (openBlock(), createBlock(\"svg\", _hoisted_2$1, null, 512)) : createCommentVNode(\"v-if\", true)]),\n    _: 1\n  }, 8, [\"id\", \"view-class\", \"onMousemove\", \"onMouseleave\"]);\n}\n\nscript$1.render = render$1;\nscript$1.__file = \"packages/cascader-panel/src/menu.vue\";\n/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\n\nconst EMPTY_OBJ = process.env.NODE_ENV !== 'production' ? Object.freeze({}) : {};\nconst EMPTY_ARR = process.env.NODE_ENV !== 'production' ? Object.freeze([]) : [];\n\nconst NOOP = () => {};\n\nconst isFunction = val => typeof val === 'function';\n\nlet uid = 0;\n\nconst calculatePathNodes = node => {\n  const nodes = [node];\n  let {\n    parent\n  } = node;\n\n  while (parent) {\n    nodes.unshift(parent);\n    parent = parent.parent;\n  }\n\n  return nodes;\n};\n\nclass Node {\n  constructor(data, config, parent, root = false) {\n    this.data = data;\n    this.config = config;\n    this.parent = parent;\n    this.root = root;\n    this.uid = uid++;\n    this.checked = false;\n    this.indeterminate = false;\n    this.loading = false;\n    const {\n      value: valueKey,\n      label: labelKey,\n      children: childrenKey\n    } = config;\n    const childrenData = data[childrenKey];\n    const pathNodes = calculatePathNodes(this);\n    this.level = root ? 0 : parent ? parent.level + 1 : 1;\n    this.value = data[valueKey];\n    this.label = data[labelKey];\n    this.pathNodes = pathNodes;\n    this.pathValues = pathNodes.map(node => node.value);\n    this.pathLabels = pathNodes.map(node => node.label);\n    this.childrenData = childrenData;\n    this.children = (childrenData || []).map(child => new Node(child, config, this));\n    this.loaded = !config.lazy || this.isLeaf || !isEmpty(childrenData);\n  }\n\n  get isDisabled() {\n    const {\n      data,\n      parent,\n      config\n    } = this;\n    const {\n      disabled,\n      checkStrictly\n    } = config;\n    const isDisabled = isFunction(disabled) ? disabled(data, this) : !!data[disabled];\n    return isDisabled || !checkStrictly && (parent == null ? void 0 : parent.isDisabled);\n  }\n\n  get isLeaf() {\n    const {\n      data,\n      config,\n      childrenData,\n      loaded\n    } = this;\n    const {\n      lazy,\n      leaf\n    } = config;\n    const isLeaf = isFunction(leaf) ? leaf(data, this) : data[leaf];\n    return isUndefined(isLeaf) ? lazy && !loaded ? false : !Array.isArray(childrenData) : !!isLeaf;\n  }\n\n  get valueByOption() {\n    return this.config.emitPath ? this.pathValues : this.value;\n  }\n\n  appendChild(childData) {\n    const {\n      childrenData,\n      children\n    } = this;\n    const node = new Node(childData, this.config, this);\n\n    if (Array.isArray(childrenData)) {\n      childrenData.push(childData);\n    } else {\n      this.childrenData = [childData];\n    }\n\n    children.push(node);\n    return node;\n  }\n\n  calcText(allLevels, separator) {\n    const text = allLevels ? this.pathLabels.join(separator) : this.label;\n    this.text = text;\n    return text;\n  }\n\n  broadcast(event, ...args) {\n    const handlerName = `onParent${capitalize(event)}`;\n    this.children.forEach(child => {\n      if (child) {\n        child.broadcast(event, ...args);\n        child[handlerName] && child[handlerName](...args);\n      }\n    });\n  }\n\n  emit(event, ...args) {\n    const {\n      parent\n    } = this;\n    const handlerName = `onChild${capitalize(event)}`;\n\n    if (parent) {\n      parent[handlerName] && parent[handlerName](...args);\n      parent.emit(event, ...args);\n    }\n  }\n\n  onParentCheck(checked) {\n    if (!this.isDisabled) {\n      this.setCheckState(checked);\n    }\n  }\n\n  onChildCheck() {\n    const {\n      children\n    } = this;\n    const validChildren = children.filter(child => !child.isDisabled);\n    const checked = validChildren.length ? validChildren.every(child => child.checked) : false;\n    this.setCheckState(checked);\n  }\n\n  setCheckState(checked) {\n    const totalNum = this.children.length;\n    const checkedNum = this.children.reduce((c, p) => {\n      const num = p.checked ? 1 : p.indeterminate ? 0.5 : 0;\n      return c + num;\n    }, 0);\n    this.checked = this.loaded && this.children.every(child => child.loaded && child.checked) && checked;\n    this.indeterminate = this.loaded && checkedNum !== totalNum && checkedNum > 0;\n  }\n\n  doCheck(checked) {\n    if (this.checked === checked) return;\n    const {\n      checkStrictly,\n      multiple\n    } = this.config;\n\n    if (checkStrictly || !multiple) {\n      this.checked = checked;\n    } else {\n      this.broadcast(\"check\", checked);\n      this.setCheckState(checked);\n      this.emit(\"check\");\n    }\n  }\n\n}\n\nconst flatNodes = (nodes, leafOnly) => {\n  return nodes.reduce((res, node) => {\n    if (node.isLeaf) {\n      res.push(node);\n    } else {\n      !leafOnly && res.push(node);\n      res = res.concat(flatNodes(node.children, leafOnly));\n    }\n\n    return res;\n  }, []);\n};\n\nclass Store {\n  constructor(data, config) {\n    this.config = config;\n    const nodes = (data || []).map(nodeData => new Node(nodeData, this.config));\n    this.nodes = nodes;\n    this.allNodes = flatNodes(nodes, false);\n    this.leafNodes = flatNodes(nodes, true);\n  }\n\n  getNodes() {\n    return this.nodes;\n  }\n\n  getFlattedNodes(leafOnly) {\n    return leafOnly ? this.leafNodes : this.allNodes;\n  }\n\n  appendNode(nodeData, parentNode) {\n    const node = parentNode ? parentNode.appendChild(nodeData) : new Node(nodeData, this.config);\n    if (!parentNode) this.nodes.push(node);\n    this.allNodes.push(node);\n    node.isLeaf && this.leafNodes.push(node);\n  }\n\n  appendNodes(nodeDataList, parentNode) {\n    nodeDataList.forEach(nodeData => this.appendNode(nodeData, parentNode));\n  }\n\n  getNodeByValue(value, leafOnly = false) {\n    if (!value && value !== 0) return null;\n    const nodes = this.getFlattedNodes(leafOnly).filter(node => isEqual(node.value, value) || isEqual(node.pathValues, value));\n    return nodes[0] || null;\n  }\n\n  getSameNode(node) {\n    if (!node) return null;\n    const nodes = this.getFlattedNodes(false).filter(({\n      value,\n      level\n    }) => isEqual(node.value, value) && node.level === level);\n    return nodes[0] || null;\n  }\n\n}\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nconst CommonProps = {\n  modelValue: [Number, String, Array],\n  options: {\n    type: Array,\n    default: () => []\n  },\n  props: {\n    type: Object,\n    default: () => ({})\n  }\n};\nconst DefaultProps = {\n  expandTrigger: ExpandTrigger.CLICK,\n  multiple: false,\n  checkStrictly: false,\n  emitPath: true,\n  lazy: false,\n  lazyLoad: NOOP,\n  value: \"value\",\n  label: \"label\",\n  children: \"children\",\n  leaf: \"leaf\",\n  disabled: \"disabled\",\n  hoverThreshold: 500\n};\n\nconst useCascaderConfig = props => {\n  return computed(() => __spreadValues(__spreadValues({}, DefaultProps), props.props));\n};\n\nconst isLeaf = el => !el.getAttribute(\"aria-owns\");\n\nconst getSibling = (el, distance) => {\n  const {\n    parentNode\n  } = el;\n  if (!parentNode) return null;\n  const siblings = parentNode.querySelectorAll('.el-cascader-node[tabindex=\"-1\"]');\n  const index = Array.prototype.indexOf.call(siblings, el);\n  return siblings[index + distance] || null;\n};\n\nconst getMenuIndex = el => {\n  if (!el) return 0;\n  const pieces = el.id.split(\"-\");\n  return Number(pieces[pieces.length - 2]);\n};\n\nconst focusNode = el => {\n  if (!el) return;\n  el.focus();\n  !isLeaf(el) && el.click();\n};\n\nconst checkNode = el => {\n  if (!el) return;\n  const input = el.querySelector(\"input\");\n\n  if (input) {\n    input.click();\n  } else if (isLeaf(el)) {\n    el.click();\n  }\n};\n\nconst sortByOriginalOrder = (oldNodes, newNodes) => {\n  const newNodesCopy = newNodes.slice(0);\n  const newIds = newNodesCopy.map(node => node.uid);\n  const res = oldNodes.reduce((acc, item) => {\n    const index = newIds.indexOf(item.uid);\n\n    if (index > -1) {\n      acc.push(item);\n      newNodesCopy.splice(index, 1);\n      newIds.splice(index, 1);\n    }\n\n    return acc;\n  }, []);\n  res.push(...newNodesCopy);\n  return res;\n};\n\nvar __defProp$1 = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp$1.call(b, prop)) __defNormalProp$1(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols$1) for (var prop of __getOwnPropSymbols$1(b)) {\n    if (__propIsEnum$1.call(b, prop)) __defNormalProp$1(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar script$2 = defineComponent({\n  name: \"ElCascaderPanel\",\n  components: {\n    ElCascaderMenu: script$1\n  },\n  props: __spreadProps(__spreadValues$1({}, CommonProps), {\n    border: {\n      type: Boolean,\n      default: true\n    },\n    renderLabel: Function\n  }),\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"close\", \"expand-change\"],\n\n  setup(props, {\n    emit,\n    slots\n  }) {\n    let initialLoaded = true;\n    let manualChecked = false;\n    const config = useCascaderConfig(props);\n    const store = ref(null);\n    const menuList = ref([]);\n    const checkedValue = ref(null);\n    const menus = ref([]);\n    const expandingNode = ref(null);\n    const checkedNodes = ref([]);\n    const isHoverMenu = computed(() => config.value.expandTrigger === ExpandTrigger.HOVER);\n    const renderLabelFn = computed(() => props.renderLabel || slots.default);\n\n    const initStore = () => {\n      const {\n        options\n      } = props;\n      const cfg = config.value;\n      manualChecked = false;\n      store.value = new Store(options, cfg);\n      menus.value = [store.value.getNodes()];\n\n      if (cfg.lazy && isEmpty(props.options)) {\n        initialLoaded = false;\n        lazyLoad(null, () => {\n          initialLoaded = true;\n          syncCheckedValue(false, true);\n        });\n      } else {\n        syncCheckedValue(false, true);\n      }\n    };\n\n    const lazyLoad = (node, cb) => {\n      const cfg = config.value;\n      node = node || new Node({}, cfg, null, true);\n      node.loading = true;\n\n      const resolve = dataList => {\n        const parent = node.root ? null : node;\n        dataList && store.value.appendNodes(dataList, parent);\n        node.loading = false;\n        node.loaded = true;\n        cb && cb(dataList);\n      };\n\n      cfg.lazyLoad(node, resolve);\n    };\n\n    const expandNode = (node, silent) => {\n      var _a;\n\n      const {\n        level\n      } = node;\n      const newMenus = menus.value.slice(0, level);\n      let newExpandingNode;\n\n      if (node.isLeaf) {\n        newExpandingNode = node.pathNodes[level - 2];\n      } else {\n        newExpandingNode = node;\n        newMenus.push(node.children);\n      }\n\n      if (((_a = expandingNode.value) == null ? void 0 : _a.uid) !== (newExpandingNode == null ? void 0 : newExpandingNode.uid)) {\n        expandingNode.value = node;\n        menus.value = newMenus;\n        !silent && emit(\"expand-change\", (node == null ? void 0 : node.pathValues) || []);\n      }\n    };\n\n    const handleCheckChange = (node, checked, emitClose = true) => {\n      const {\n        checkStrictly,\n        multiple\n      } = config.value;\n      const oldNode = checkedNodes.value[0];\n      manualChecked = true;\n      !multiple && (oldNode == null ? void 0 : oldNode.doCheck(false));\n      node.doCheck(checked);\n      calculateCheckedValue();\n      emitClose && !multiple && !checkStrictly && emit(\"close\");\n    };\n\n    const getFlattedNodes = leafOnly => {\n      return store.value.getFlattedNodes(leafOnly);\n    };\n\n    const getCheckedNodes = leafOnly => {\n      return getFlattedNodes(leafOnly).filter(node => node.checked !== false);\n    };\n\n    const clearCheckedNodes = () => {\n      checkedNodes.value.forEach(node => node.doCheck(false));\n      calculateCheckedValue();\n    };\n\n    const calculateCheckedValue = () => {\n      var _a;\n\n      const {\n        checkStrictly,\n        multiple\n      } = config.value;\n      const oldNodes = checkedNodes.value;\n      const newNodes = getCheckedNodes(!checkStrictly);\n      const nodes = sortByOriginalOrder(oldNodes, newNodes);\n      const values = nodes.map(node => node.valueByOption);\n      checkedNodes.value = nodes;\n      checkedValue.value = multiple ? values : (_a = values[0]) != null ? _a : null;\n    };\n\n    const syncCheckedValue = (loaded = false, forced = false) => {\n      const {\n        modelValue\n      } = props;\n      const {\n        lazy,\n        multiple,\n        checkStrictly\n      } = config.value;\n      const leafOnly = !checkStrictly;\n      if (!initialLoaded || manualChecked || !forced && isEqual(modelValue, checkedValue.value)) return;\n\n      if (lazy && !loaded) {\n        const values = deduplicate(arrayFlat(coerceTruthyValueToArray(modelValue)));\n        const nodes = values.map(val => store.value.getNodeByValue(val)).filter(node => !!node && !node.loaded && !node.loading);\n\n        if (nodes.length) {\n          nodes.forEach(node => {\n            lazyLoad(node, () => syncCheckedValue(false, forced));\n          });\n        } else {\n          syncCheckedValue(true, forced);\n        }\n      } else {\n        const values = multiple ? coerceTruthyValueToArray(modelValue) : [modelValue];\n        const nodes = deduplicate(values.map(val => store.value.getNodeByValue(val, leafOnly)));\n        syncMenuState(nodes, false);\n        checkedValue.value = modelValue;\n      }\n    };\n\n    const syncMenuState = (newCheckedNodes, reserveExpandingState = true) => {\n      const {\n        checkStrictly\n      } = config.value;\n      const oldNodes = checkedNodes.value;\n      const newNodes = newCheckedNodes.filter(node => !!node && (checkStrictly || node.isLeaf));\n      const oldExpandingNode = store.value.getSameNode(expandingNode.value);\n      const newExpandingNode = reserveExpandingState && oldExpandingNode || newNodes[0];\n\n      if (newExpandingNode) {\n        newExpandingNode.pathNodes.forEach(node => expandNode(node, true));\n      } else {\n        expandingNode.value = null;\n      }\n\n      oldNodes.forEach(node => node.doCheck(false));\n      newNodes.forEach(node => node.doCheck(true));\n      checkedNodes.value = newNodes;\n      nextTick(scrollToExpandingNode);\n    };\n\n    const scrollToExpandingNode = () => {\n      if (isServer) return;\n      menuList.value.forEach(menu => {\n        const menuElement = menu == null ? void 0 : menu.$el;\n\n        if (menuElement) {\n          const container = menuElement.querySelector(\".el-scrollbar__wrap\");\n          const activeNode = menuElement.querySelector(\".el-cascader-node.is-active\") || menuElement.querySelector(\".el-cascader-node.in-active-path\");\n          scrollIntoView(container, activeNode);\n        }\n      });\n    };\n\n    const handleKeyDown = e => {\n      const target = e.target;\n      const {\n        code\n      } = e;\n\n      switch (code) {\n        case EVENT_CODE.up:\n        case EVENT_CODE.down:\n          const distance = code === EVENT_CODE.up ? -1 : 1;\n          focusNode(getSibling(target, distance));\n          break;\n\n        case EVENT_CODE.left:\n          const preMenu = menuList.value[getMenuIndex(target) - 1];\n          const expandedNode = preMenu == null ? void 0 : preMenu.$el.querySelector('.el-cascader-node[aria-expanded=\"true\"]');\n          focusNode(expandedNode);\n          break;\n\n        case EVENT_CODE.right:\n          const nextMenu = menuList.value[getMenuIndex(target) + 1];\n          const firstNode = nextMenu == null ? void 0 : nextMenu.$el.querySelector('.el-cascader-node[tabindex=\"-1\"]');\n          focusNode(firstNode);\n          break;\n\n        case EVENT_CODE.enter:\n          checkNode(target);\n          break;\n\n        case EVENT_CODE.esc:\n        case EVENT_CODE.tab:\n          emit(\"close\");\n          break;\n      }\n    };\n\n    provide(CASCADER_PANEL_INJECTION_KEY, reactive({\n      config,\n      expandingNode,\n      checkedNodes,\n      isHoverMenu,\n      renderLabelFn,\n      lazyLoad,\n      expandNode,\n      handleCheckChange\n    }));\n    watch([config, () => props.options], initStore, {\n      deep: true,\n      immediate: true\n    });\n    watch(() => props.modelValue, () => {\n      manualChecked = false;\n      syncCheckedValue();\n    });\n    watch(checkedValue, val => {\n      if (!isEqual(val, props.modelValue)) {\n        emit(UPDATE_MODEL_EVENT, val);\n        emit(CHANGE_EVENT, val);\n      }\n    });\n    onBeforeUpdate(() => menuList.value = []);\n    onMounted(() => !isEmpty(props.modelValue) && syncCheckedValue());\n    return {\n      menuList,\n      menus,\n      checkedNodes,\n      handleKeyDown,\n      handleCheckChange,\n      getFlattedNodes,\n      getCheckedNodes,\n      clearCheckedNodes,\n      calculateCheckedValue,\n      scrollToExpandingNode\n    };\n  }\n\n});\n\nfunction render$2(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_cascader_menu = resolveComponent(\"el-cascader-menu\");\n\n  return openBlock(), createBlock(\"div\", {\n    class: [\"el-cascader-panel\", _ctx.border && \"is-bordered\"],\n    onKeydown: _cache[1] || (_cache[1] = (...args) => _ctx.handleKeyDown && _ctx.handleKeyDown(...args))\n  }, [(openBlock(true), createBlock(Fragment, null, renderList(_ctx.menus, (menu, index) => {\n    return openBlock(), createBlock(_component_el_cascader_menu, {\n      key: index,\n      ref: item => _ctx.menuList[index] = item,\n      index,\n      nodes: menu\n    }, null, 8, [\"index\", \"nodes\"]);\n  }), 128))], 34);\n}\n\nscript$2.render = render$2;\nscript$2.__file = \"packages/cascader-panel/src/index.vue\";\n\nscript$2.install = app => {\n  app.component(script$2.name, script$2);\n};\n\nconst _CascaderPanel = script$2;\nexport default _CascaderPanel;\nexport { CASCADER_PANEL_INJECTION_KEY, CommonProps, DefaultProps, ExpandTrigger, useCascaderConfig };","map":{"version":3,"sources":["F:/XDUcat/XDUcat-client/node_modules/element-plus/es/el-cascader-panel/index.js"],"names":["defineComponent","h","inject","computed","resolveComponent","openBlock","createBlock","createCommentVNode","withModifiers","withCtx","createVNode","Fragment","getCurrentInstance","ref","renderList","toDisplayString","provide","reactive","watch","onBeforeUpdate","onMounted","nextTick","ElScrollbar","ElCheckbox","ElRadio","useLocaleInject","generateId","isEmpty","isUndefined","capitalize","deduplicate","arrayFlat","coerceTruthyValueToArray","isEqual","EVENT_CODE","UPDATE_MODEL_EVENT","CHANGE_EVENT","isServer","scrollIntoView","ExpandTrigger","ExpandTrigger2","CASCADER_PANEL_INJECTION_KEY","Symbol","script","name","components","NodeContent","render","node","panel","$parent","data","label","renderLabelFn","class","props","type","Object","required","menuId","String","emits","setup","emit","isHoverMenu","multiple","config","checkStrictly","checkedNodeId","_a","checkedNodes","uid","isDisabled","isLeaf","expandable","value","inExpandingPath","isInPath","expandingNode","inCheckedPath","some","level","pathNodes","doExpand","expandNode","doCheck","checked","handleCheckChange","doLoad","lazyLoad","handleHoverExpand","e","handleExpand","loading","loaded","handleClick","handleCheck","_hoisted_1","_hoisted_2","key","_hoisted_3","_hoisted_4","_ctx","_cache","$props","$setup","$data","$options","_component_el_checkbox","_component_el_radio","_component_node_content","id","role","tabindex","onMouseenter","args","onFocus","onClick","indeterminate","disabled","default","_","__file","script$1","ElCascaderNode","nodes","Array","index","Number","instance","t","activeNode","hoverTimer","hoverZone","length","target","handleMouseMove","contains","clearHoverTimer","el","vnode","left","getBoundingClientRect","offsetWidth","offsetHeight","startX","clientX","top","offsetTop","bottom","innerHTML","window","setTimeout","clearHoverZone","hoverThreshold","clearTimeout","_hoisted_1$1","_hoisted_2$1","render$1","_component_el_cascader_node","_component_el_scrollbar","tag","onMousemove","onMouseleave","onExpand","EMPTY_OBJ","process","env","NODE_ENV","freeze","EMPTY_ARR","NOOP","isFunction","val","calculatePathNodes","parent","unshift","Node","constructor","root","valueKey","labelKey","children","childrenKey","childrenData","pathValues","map","pathLabels","child","lazy","leaf","isArray","valueByOption","emitPath","appendChild","childData","push","calcText","allLevels","separator","text","join","broadcast","event","handlerName","forEach","onParentCheck","setCheckState","onChildCheck","validChildren","filter","every","totalNum","checkedNum","reduce","c","p","num","flatNodes","leafOnly","res","concat","Store","nodeData","allNodes","leafNodes","getNodes","getFlattedNodes","appendNode","parentNode","appendNodes","nodeDataList","getNodeByValue","getSameNode","__defProp","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","enumerable","configurable","writable","__spreadValues","a","b","prop","call","CommonProps","modelValue","options","DefaultProps","expandTrigger","CLICK","useCascaderConfig","getAttribute","getSibling","distance","siblings","querySelectorAll","indexOf","getMenuIndex","pieces","split","focusNode","focus","click","checkNode","input","querySelector","sortByOriginalOrder","oldNodes","newNodes","newNodesCopy","slice","newIds","acc","item","splice","__defProp$1","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols$1","__hasOwnProp$1","__propIsEnum$1","__defNormalProp$1","__spreadValues$1","__spreadProps","script$2","ElCascaderMenu","border","Boolean","renderLabel","Function","slots","initialLoaded","manualChecked","store","menuList","checkedValue","menus","HOVER","initStore","cfg","syncCheckedValue","cb","resolve","dataList","silent","newMenus","newExpandingNode","emitClose","oldNode","calculateCheckedValue","getCheckedNodes","clearCheckedNodes","values","forced","syncMenuState","newCheckedNodes","reserveExpandingState","oldExpandingNode","scrollToExpandingNode","menu","menuElement","$el","container","handleKeyDown","code","up","down","preMenu","expandedNode","right","nextMenu","firstNode","enter","esc","tab","deep","immediate","render$2","_component_el_cascader_menu","onKeydown","install","app","component","_CascaderPanel"],"mappings":"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","sourcesContent":["import { defineComponent, h, inject, computed, resolveComponent, openBlock, createBlock, createCommentVNode, withModifiers, withCtx, createVNode, Fragment, getCurrentInstance, ref, renderList, toDisplayString, provide, reactive, watch, onBeforeUpdate, onMounted, nextTick } from 'vue';\nimport ElScrollbar from '../el-scrollbar';\nimport ElCheckbox from '../el-checkbox';\nimport ElRadio from '../el-radio';\nimport { useLocaleInject } from '../hooks';\nimport { generateId, isEmpty, isUndefined, capitalize, deduplicate, arrayFlat, coerceTruthyValueToArray } from '../utils/util';\nimport isEqual from 'lodash/isEqual';\nimport { EVENT_CODE } from '../utils/aria';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../utils/constants';\nimport isServer from '../utils/isServer';\nimport scrollIntoView from '../utils/scroll-into-view';\n\nvar ExpandTrigger;\n(function(ExpandTrigger2) {\n  ExpandTrigger2[\"CLICK\"] = \"click\";\n  ExpandTrigger2[\"HOVER\"] = \"hover\";\n})(ExpandTrigger || (ExpandTrigger = {}));\nconst CASCADER_PANEL_INJECTION_KEY = Symbol();\n\nvar script = defineComponent({\n  name: \"ElCascaderNode\",\n  components: {\n    ElCheckbox,\n    ElRadio,\n    NodeContent: {\n      render() {\n        const { node, panel } = this.$parent;\n        const { data, label } = node;\n        const { renderLabelFn } = panel;\n        return h(\"span\", { class: \"el-cascader-node__label\" }, renderLabelFn ? renderLabelFn({ node, data }) : label);\n      }\n    }\n  },\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    menuId: String\n  },\n  emits: [\"expand\"],\n  setup(props, { emit }) {\n    const panel = inject(CASCADER_PANEL_INJECTION_KEY);\n    const isHoverMenu = computed(() => panel.isHoverMenu);\n    const multiple = computed(() => panel.config.multiple);\n    const checkStrictly = computed(() => panel.config.checkStrictly);\n    const checkedNodeId = computed(() => {\n      var _a;\n      return (_a = panel.checkedNodes[0]) == null ? void 0 : _a.uid;\n    });\n    const isDisabled = computed(() => props.node.isDisabled);\n    const isLeaf = computed(() => props.node.isLeaf);\n    const expandable = computed(() => checkStrictly.value && !isLeaf.value || !isDisabled.value);\n    const inExpandingPath = computed(() => isInPath(panel.expandingNode));\n    const inCheckedPath = computed(() => checkStrictly.value && panel.checkedNodes.some(isInPath));\n    const isInPath = (node) => {\n      var _a;\n      const { level, uid } = props.node;\n      return ((_a = node == null ? void 0 : node.pathNodes[level - 1]) == null ? void 0 : _a.uid) === uid;\n    };\n    const doExpand = () => {\n      if (inExpandingPath.value)\n        return;\n      panel.expandNode(props.node);\n    };\n    const doCheck = (checked) => {\n      const { node } = props;\n      if (checked === node.checked)\n        return;\n      panel.handleCheckChange(node, checked);\n    };\n    const doLoad = () => {\n      panel.lazyLoad(props.node, () => {\n        if (!isLeaf.value)\n          doExpand();\n      });\n    };\n    const handleHoverExpand = (e) => {\n      if (!isHoverMenu.value)\n        return;\n      handleExpand();\n      !isLeaf.value && emit(\"expand\", e);\n    };\n    const handleExpand = () => {\n      const { node } = props;\n      if (!expandable.value || node.loading)\n        return;\n      node.loaded ? doExpand() : doLoad();\n    };\n    const handleClick = () => {\n      if (isHoverMenu.value && !isLeaf.value)\n        return;\n      if (isLeaf.value && !isDisabled.value && !checkStrictly.value && !multiple.value) {\n        handleCheck(true);\n      } else {\n        handleExpand();\n      }\n    };\n    const handleCheck = (checked) => {\n      if (!props.node.loaded) {\n        doLoad();\n      } else {\n        doCheck(checked);\n        !checkStrictly.value && doExpand();\n      }\n    };\n    return {\n      panel,\n      isHoverMenu,\n      multiple,\n      checkStrictly,\n      checkedNodeId,\n      isDisabled,\n      isLeaf,\n      expandable,\n      inExpandingPath,\n      inCheckedPath,\n      handleHoverExpand,\n      handleExpand,\n      handleClick,\n      handleCheck\n    };\n  }\n});\n\nconst _hoisted_1 = /* @__PURE__ */ createVNode(\"span\", null, null, -1);\nconst _hoisted_2 = {\n  key: 2,\n  class: \"el-icon-check el-cascader-node__prefix\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"el-icon-loading el-cascader-node__postfix\"\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"el-icon-arrow-right el-cascader-node__postfix\"\n};\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_checkbox = resolveComponent(\"el-checkbox\");\n  const _component_el_radio = resolveComponent(\"el-radio\");\n  const _component_node_content = resolveComponent(\"node-content\");\n  return openBlock(), createBlock(\"li\", {\n    id: `${_ctx.menuId}-${_ctx.node.uid}`,\n    role: \"menuitem\",\n    \"aria-haspopup\": !_ctx.isLeaf,\n    \"aria-owns\": _ctx.isLeaf ? null : _ctx.menuId,\n    \"aria-expanded\": _ctx.inExpandingPath,\n    tabindex: _ctx.expandable ? -1 : null,\n    class: [\n      \"el-cascader-node\",\n      _ctx.checkStrictly && \"is-selectable\",\n      _ctx.inExpandingPath && \"in-active-path\",\n      _ctx.inCheckedPath && \"in-checked-path\",\n      _ctx.node.checked && \"is-active\",\n      !_ctx.expandable && \"is-disabled\"\n    ],\n    onMouseenter: _cache[3] || (_cache[3] = (...args) => _ctx.handleHoverExpand && _ctx.handleHoverExpand(...args)),\n    onFocus: _cache[4] || (_cache[4] = (...args) => _ctx.handleHoverExpand && _ctx.handleHoverExpand(...args)),\n    onClick: _cache[5] || (_cache[5] = (...args) => _ctx.handleClick && _ctx.handleClick(...args))\n  }, [\n    createCommentVNode(\" prefix \"),\n    _ctx.multiple ? (openBlock(), createBlock(_component_el_checkbox, {\n      key: 0,\n      \"model-value\": _ctx.node.checked,\n      indeterminate: _ctx.node.indeterminate,\n      disabled: _ctx.isDisabled,\n      onClick: _cache[1] || (_cache[1] = withModifiers(() => {\n      }, [\"stop\"])),\n      \"onUpdate:modelValue\": _ctx.handleCheck\n    }, null, 8, [\"model-value\", \"indeterminate\", \"disabled\", \"onUpdate:modelValue\"])) : _ctx.checkStrictly ? (openBlock(), createBlock(_component_el_radio, {\n      key: 1,\n      \"model-value\": _ctx.checkedNodeId,\n      label: _ctx.node.uid,\n      disabled: _ctx.isDisabled,\n      \"onUpdate:modelValue\": _ctx.handleCheck,\n      onClick: _cache[2] || (_cache[2] = withModifiers(() => {\n      }, [\"stop\"]))\n    }, {\n      default: withCtx(() => [\n        createCommentVNode(\"\\n        Add an empty element to avoid render label,\\n        do not use empty fragment here for https://github.com/vuejs/vue-next/pull/2485\\n      \"),\n        _hoisted_1\n      ]),\n      _: 1\n    }, 8, [\"model-value\", \"label\", \"disabled\", \"onUpdate:modelValue\"])) : _ctx.isLeaf && _ctx.node.checked ? (openBlock(), createBlock(\"i\", _hoisted_2)) : createCommentVNode(\"v-if\", true),\n    createCommentVNode(\" content \"),\n    createVNode(_component_node_content),\n    createCommentVNode(\" postfix \"),\n    !_ctx.isLeaf ? (openBlock(), createBlock(Fragment, { key: 3 }, [\n      _ctx.node.loading ? (openBlock(), createBlock(\"i\", _hoisted_3)) : (openBlock(), createBlock(\"i\", _hoisted_4))\n    ], 2112)) : createCommentVNode(\"v-if\", true)\n  ], 42, [\"id\", \"aria-haspopup\", \"aria-owns\", \"aria-expanded\", \"tabindex\"]);\n}\n\nscript.render = render;\nscript.__file = \"packages/cascader-panel/src/node.vue\";\n\nvar script$1 = defineComponent({\n  name: \"ElCascaderMenu\",\n  components: {\n    ElScrollbar,\n    ElCascaderNode: script\n  },\n  props: {\n    nodes: {\n      type: Array,\n      required: true\n    },\n    index: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const instance = getCurrentInstance();\n    const { t } = useLocaleInject();\n    const id = generateId();\n    let activeNode = null;\n    let hoverTimer = null;\n    const panel = inject(CASCADER_PANEL_INJECTION_KEY);\n    const hoverZone = ref(null);\n    const isEmpty = computed(() => !props.nodes.length);\n    const menuId = computed(() => `cascader-menu-${id}-${props.index}`);\n    const handleExpand = (e) => {\n      activeNode = e.target;\n    };\n    const handleMouseMove = (e) => {\n      if (!panel.isHoverMenu || !activeNode || !hoverZone.value)\n        return;\n      if (activeNode.contains(e.target)) {\n        clearHoverTimer();\n        const el = instance.vnode.el;\n        const { left } = el.getBoundingClientRect();\n        const { offsetWidth, offsetHeight } = el;\n        const startX = e.clientX - left;\n        const top = activeNode.offsetTop;\n        const bottom = top + activeNode.offsetHeight;\n        hoverZone.value.innerHTML = `\n          <path style=\"pointer-events: auto;\" fill=\"transparent\" d=\"M${startX} ${top} L${offsetWidth} 0 V${top} Z\" />\n          <path style=\"pointer-events: auto;\" fill=\"transparent\" d=\"M${startX} ${bottom} L${offsetWidth} ${offsetHeight} V${bottom} Z\" />\n        `;\n      } else if (!hoverTimer) {\n        hoverTimer = window.setTimeout(clearHoverZone, panel.config.hoverThreshold);\n      }\n    };\n    const clearHoverTimer = () => {\n      if (!hoverTimer)\n        return;\n      clearTimeout(hoverTimer);\n      hoverTimer = null;\n    };\n    const clearHoverZone = () => {\n      if (!hoverZone.value)\n        return;\n      hoverZone.value.innerHTML = \"\";\n      clearHoverTimer();\n    };\n    return {\n      panel,\n      hoverZone,\n      isEmpty,\n      menuId,\n      t,\n      handleExpand,\n      handleMouseMove,\n      clearHoverZone\n    };\n  }\n});\n\nconst _hoisted_1$1 = {\n  key: 0,\n  class: \"el-cascader-menu__empty-text\"\n};\nconst _hoisted_2$1 = {\n  key: 1,\n  ref: \"hoverZone\",\n  class: \"el-cascader-menu__hover-zone\"\n};\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_cascader_node = resolveComponent(\"el-cascader-node\");\n  const _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n  return openBlock(), createBlock(_component_el_scrollbar, {\n    id: _ctx.menuId,\n    tag: \"ul\",\n    role: \"menu\",\n    class: \"el-cascader-menu\",\n    \"wrap-class\": \"el-cascader-menu__wrap\",\n    \"view-class\": [\n      \"el-cascader-menu__list\",\n      _ctx.isEmpty && \"is-empty\"\n    ],\n    onMousemove: _ctx.handleMouseMove,\n    onMouseleave: _ctx.clearHoverZone\n  }, {\n    default: withCtx(() => [\n      (openBlock(true), createBlock(Fragment, null, renderList(_ctx.nodes, (node) => {\n        return openBlock(), createBlock(_component_el_cascader_node, {\n          key: node.uid,\n          node,\n          \"menu-id\": _ctx.menuId,\n          onExpand: _ctx.handleExpand\n        }, null, 8, [\"node\", \"menu-id\", \"onExpand\"]);\n      }), 128)),\n      _ctx.isEmpty ? (openBlock(), createBlock(\"div\", _hoisted_1$1, toDisplayString(_ctx.t(\"el.cascader.noData\")), 1)) : _ctx.panel.isHoverMenu ? (openBlock(), createBlock(\"svg\", _hoisted_2$1, null, 512)) : createCommentVNode(\"v-if\", true)\n    ]),\n    _: 1\n  }, 8, [\"id\", \"view-class\", \"onMousemove\", \"onMouseleave\"]);\n}\n\nscript$1.render = render$1;\nscript$1.__file = \"packages/cascader-panel/src/menu.vue\";\n\n/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\nconst isFunction = (val) => typeof val === 'function';\n\nlet uid = 0;\nconst calculatePathNodes = (node) => {\n  const nodes = [node];\n  let { parent } = node;\n  while (parent) {\n    nodes.unshift(parent);\n    parent = parent.parent;\n  }\n  return nodes;\n};\nclass Node {\n  constructor(data, config, parent, root = false) {\n    this.data = data;\n    this.config = config;\n    this.parent = parent;\n    this.root = root;\n    this.uid = uid++;\n    this.checked = false;\n    this.indeterminate = false;\n    this.loading = false;\n    const { value: valueKey, label: labelKey, children: childrenKey } = config;\n    const childrenData = data[childrenKey];\n    const pathNodes = calculatePathNodes(this);\n    this.level = root ? 0 : parent ? parent.level + 1 : 1;\n    this.value = data[valueKey];\n    this.label = data[labelKey];\n    this.pathNodes = pathNodes;\n    this.pathValues = pathNodes.map((node) => node.value);\n    this.pathLabels = pathNodes.map((node) => node.label);\n    this.childrenData = childrenData;\n    this.children = (childrenData || []).map((child) => new Node(child, config, this));\n    this.loaded = !config.lazy || this.isLeaf || !isEmpty(childrenData);\n  }\n  get isDisabled() {\n    const { data, parent, config } = this;\n    const { disabled, checkStrictly } = config;\n    const isDisabled = isFunction(disabled) ? disabled(data, this) : !!data[disabled];\n    return isDisabled || !checkStrictly && (parent == null ? void 0 : parent.isDisabled);\n  }\n  get isLeaf() {\n    const { data, config, childrenData, loaded } = this;\n    const { lazy, leaf } = config;\n    const isLeaf = isFunction(leaf) ? leaf(data, this) : data[leaf];\n    return isUndefined(isLeaf) ? lazy && !loaded ? false : !Array.isArray(childrenData) : !!isLeaf;\n  }\n  get valueByOption() {\n    return this.config.emitPath ? this.pathValues : this.value;\n  }\n  appendChild(childData) {\n    const { childrenData, children } = this;\n    const node = new Node(childData, this.config, this);\n    if (Array.isArray(childrenData)) {\n      childrenData.push(childData);\n    } else {\n      this.childrenData = [childData];\n    }\n    children.push(node);\n    return node;\n  }\n  calcText(allLevels, separator) {\n    const text = allLevels ? this.pathLabels.join(separator) : this.label;\n    this.text = text;\n    return text;\n  }\n  broadcast(event, ...args) {\n    const handlerName = `onParent${capitalize(event)}`;\n    this.children.forEach((child) => {\n      if (child) {\n        child.broadcast(event, ...args);\n        child[handlerName] && child[handlerName](...args);\n      }\n    });\n  }\n  emit(event, ...args) {\n    const { parent } = this;\n    const handlerName = `onChild${capitalize(event)}`;\n    if (parent) {\n      parent[handlerName] && parent[handlerName](...args);\n      parent.emit(event, ...args);\n    }\n  }\n  onParentCheck(checked) {\n    if (!this.isDisabled) {\n      this.setCheckState(checked);\n    }\n  }\n  onChildCheck() {\n    const { children } = this;\n    const validChildren = children.filter((child) => !child.isDisabled);\n    const checked = validChildren.length ? validChildren.every((child) => child.checked) : false;\n    this.setCheckState(checked);\n  }\n  setCheckState(checked) {\n    const totalNum = this.children.length;\n    const checkedNum = this.children.reduce((c, p) => {\n      const num = p.checked ? 1 : p.indeterminate ? 0.5 : 0;\n      return c + num;\n    }, 0);\n    this.checked = this.loaded && this.children.every((child) => child.loaded && child.checked) && checked;\n    this.indeterminate = this.loaded && checkedNum !== totalNum && checkedNum > 0;\n  }\n  doCheck(checked) {\n    if (this.checked === checked)\n      return;\n    const { checkStrictly, multiple } = this.config;\n    if (checkStrictly || !multiple) {\n      this.checked = checked;\n    } else {\n      this.broadcast(\"check\", checked);\n      this.setCheckState(checked);\n      this.emit(\"check\");\n    }\n  }\n}\n\nconst flatNodes = (nodes, leafOnly) => {\n  return nodes.reduce((res, node) => {\n    if (node.isLeaf) {\n      res.push(node);\n    } else {\n      !leafOnly && res.push(node);\n      res = res.concat(flatNodes(node.children, leafOnly));\n    }\n    return res;\n  }, []);\n};\nclass Store {\n  constructor(data, config) {\n    this.config = config;\n    const nodes = (data || []).map((nodeData) => new Node(nodeData, this.config));\n    this.nodes = nodes;\n    this.allNodes = flatNodes(nodes, false);\n    this.leafNodes = flatNodes(nodes, true);\n  }\n  getNodes() {\n    return this.nodes;\n  }\n  getFlattedNodes(leafOnly) {\n    return leafOnly ? this.leafNodes : this.allNodes;\n  }\n  appendNode(nodeData, parentNode) {\n    const node = parentNode ? parentNode.appendChild(nodeData) : new Node(nodeData, this.config);\n    if (!parentNode)\n      this.nodes.push(node);\n    this.allNodes.push(node);\n    node.isLeaf && this.leafNodes.push(node);\n  }\n  appendNodes(nodeDataList, parentNode) {\n    nodeDataList.forEach((nodeData) => this.appendNode(nodeData, parentNode));\n  }\n  getNodeByValue(value, leafOnly = false) {\n    if (!value && value !== 0)\n      return null;\n    const nodes = this.getFlattedNodes(leafOnly).filter((node) => isEqual(node.value, value) || isEqual(node.pathValues, value));\n    return nodes[0] || null;\n  }\n  getSameNode(node) {\n    if (!node)\n      return null;\n    const nodes = this.getFlattedNodes(false).filter(({ value, level }) => isEqual(node.value, value) && node.level === level);\n    return nodes[0] || null;\n  }\n}\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nconst CommonProps = {\n  modelValue: [Number, String, Array],\n  options: {\n    type: Array,\n    default: () => []\n  },\n  props: {\n    type: Object,\n    default: () => ({})\n  }\n};\nconst DefaultProps = {\n  expandTrigger: ExpandTrigger.CLICK,\n  multiple: false,\n  checkStrictly: false,\n  emitPath: true,\n  lazy: false,\n  lazyLoad: NOOP,\n  value: \"value\",\n  label: \"label\",\n  children: \"children\",\n  leaf: \"leaf\",\n  disabled: \"disabled\",\n  hoverThreshold: 500\n};\nconst useCascaderConfig = (props) => {\n  return computed(() => __spreadValues(__spreadValues({}, DefaultProps), props.props));\n};\n\nconst isLeaf = (el) => !el.getAttribute(\"aria-owns\");\nconst getSibling = (el, distance) => {\n  const { parentNode } = el;\n  if (!parentNode)\n    return null;\n  const siblings = parentNode.querySelectorAll('.el-cascader-node[tabindex=\"-1\"]');\n  const index = Array.prototype.indexOf.call(siblings, el);\n  return siblings[index + distance] || null;\n};\nconst getMenuIndex = (el) => {\n  if (!el)\n    return 0;\n  const pieces = el.id.split(\"-\");\n  return Number(pieces[pieces.length - 2]);\n};\nconst focusNode = (el) => {\n  if (!el)\n    return;\n  el.focus();\n  !isLeaf(el) && el.click();\n};\nconst checkNode = (el) => {\n  if (!el)\n    return;\n  const input = el.querySelector(\"input\");\n  if (input) {\n    input.click();\n  } else if (isLeaf(el)) {\n    el.click();\n  }\n};\nconst sortByOriginalOrder = (oldNodes, newNodes) => {\n  const newNodesCopy = newNodes.slice(0);\n  const newIds = newNodesCopy.map((node) => node.uid);\n  const res = oldNodes.reduce((acc, item) => {\n    const index = newIds.indexOf(item.uid);\n    if (index > -1) {\n      acc.push(item);\n      newNodesCopy.splice(index, 1);\n      newIds.splice(index, 1);\n    }\n    return acc;\n  }, []);\n  res.push(...newNodesCopy);\n  return res;\n};\n\nvar __defProp$1 = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols$1 = Object.getOwnPropertySymbols;\nvar __hasOwnProp$1 = Object.prototype.hasOwnProperty;\nvar __propIsEnum$1 = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp$1 = (obj, key, value) => key in obj ? __defProp$1(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues$1 = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp$1.call(b, prop))\n      __defNormalProp$1(a, prop, b[prop]);\n  if (__getOwnPropSymbols$1)\n    for (var prop of __getOwnPropSymbols$1(b)) {\n      if (__propIsEnum$1.call(b, prop))\n        __defNormalProp$1(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar script$2 = defineComponent({\n  name: \"ElCascaderPanel\",\n  components: {\n    ElCascaderMenu: script$1\n  },\n  props: __spreadProps(__spreadValues$1({}, CommonProps), {\n    border: {\n      type: Boolean,\n      default: true\n    },\n    renderLabel: Function\n  }),\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    \"close\",\n    \"expand-change\"\n  ],\n  setup(props, { emit, slots }) {\n    let initialLoaded = true;\n    let manualChecked = false;\n    const config = useCascaderConfig(props);\n    const store = ref(null);\n    const menuList = ref([]);\n    const checkedValue = ref(null);\n    const menus = ref([]);\n    const expandingNode = ref(null);\n    const checkedNodes = ref([]);\n    const isHoverMenu = computed(() => config.value.expandTrigger === ExpandTrigger.HOVER);\n    const renderLabelFn = computed(() => props.renderLabel || slots.default);\n    const initStore = () => {\n      const { options } = props;\n      const cfg = config.value;\n      manualChecked = false;\n      store.value = new Store(options, cfg);\n      menus.value = [store.value.getNodes()];\n      if (cfg.lazy && isEmpty(props.options)) {\n        initialLoaded = false;\n        lazyLoad(null, () => {\n          initialLoaded = true;\n          syncCheckedValue(false, true);\n        });\n      } else {\n        syncCheckedValue(false, true);\n      }\n    };\n    const lazyLoad = (node, cb) => {\n      const cfg = config.value;\n      node = node || new Node({}, cfg, null, true);\n      node.loading = true;\n      const resolve = (dataList) => {\n        const parent = node.root ? null : node;\n        dataList && store.value.appendNodes(dataList, parent);\n        node.loading = false;\n        node.loaded = true;\n        cb && cb(dataList);\n      };\n      cfg.lazyLoad(node, resolve);\n    };\n    const expandNode = (node, silent) => {\n      var _a;\n      const { level } = node;\n      const newMenus = menus.value.slice(0, level);\n      let newExpandingNode;\n      if (node.isLeaf) {\n        newExpandingNode = node.pathNodes[level - 2];\n      } else {\n        newExpandingNode = node;\n        newMenus.push(node.children);\n      }\n      if (((_a = expandingNode.value) == null ? void 0 : _a.uid) !== (newExpandingNode == null ? void 0 : newExpandingNode.uid)) {\n        expandingNode.value = node;\n        menus.value = newMenus;\n        !silent && emit(\"expand-change\", (node == null ? void 0 : node.pathValues) || []);\n      }\n    };\n    const handleCheckChange = (node, checked, emitClose = true) => {\n      const { checkStrictly, multiple } = config.value;\n      const oldNode = checkedNodes.value[0];\n      manualChecked = true;\n      !multiple && (oldNode == null ? void 0 : oldNode.doCheck(false));\n      node.doCheck(checked);\n      calculateCheckedValue();\n      emitClose && !multiple && !checkStrictly && emit(\"close\");\n    };\n    const getFlattedNodes = (leafOnly) => {\n      return store.value.getFlattedNodes(leafOnly);\n    };\n    const getCheckedNodes = (leafOnly) => {\n      return getFlattedNodes(leafOnly).filter((node) => node.checked !== false);\n    };\n    const clearCheckedNodes = () => {\n      checkedNodes.value.forEach((node) => node.doCheck(false));\n      calculateCheckedValue();\n    };\n    const calculateCheckedValue = () => {\n      var _a;\n      const { checkStrictly, multiple } = config.value;\n      const oldNodes = checkedNodes.value;\n      const newNodes = getCheckedNodes(!checkStrictly);\n      const nodes = sortByOriginalOrder(oldNodes, newNodes);\n      const values = nodes.map((node) => node.valueByOption);\n      checkedNodes.value = nodes;\n      checkedValue.value = multiple ? values : (_a = values[0]) != null ? _a : null;\n    };\n    const syncCheckedValue = (loaded = false, forced = false) => {\n      const { modelValue } = props;\n      const { lazy, multiple, checkStrictly } = config.value;\n      const leafOnly = !checkStrictly;\n      if (!initialLoaded || manualChecked || !forced && isEqual(modelValue, checkedValue.value))\n        return;\n      if (lazy && !loaded) {\n        const values = deduplicate(arrayFlat(coerceTruthyValueToArray(modelValue)));\n        const nodes = values.map((val) => store.value.getNodeByValue(val)).filter((node) => !!node && !node.loaded && !node.loading);\n        if (nodes.length) {\n          nodes.forEach((node) => {\n            lazyLoad(node, () => syncCheckedValue(false, forced));\n          });\n        } else {\n          syncCheckedValue(true, forced);\n        }\n      } else {\n        const values = multiple ? coerceTruthyValueToArray(modelValue) : [modelValue];\n        const nodes = deduplicate(values.map((val) => store.value.getNodeByValue(val, leafOnly)));\n        syncMenuState(nodes, false);\n        checkedValue.value = modelValue;\n      }\n    };\n    const syncMenuState = (newCheckedNodes, reserveExpandingState = true) => {\n      const { checkStrictly } = config.value;\n      const oldNodes = checkedNodes.value;\n      const newNodes = newCheckedNodes.filter((node) => !!node && (checkStrictly || node.isLeaf));\n      const oldExpandingNode = store.value.getSameNode(expandingNode.value);\n      const newExpandingNode = reserveExpandingState && oldExpandingNode || newNodes[0];\n      if (newExpandingNode) {\n        newExpandingNode.pathNodes.forEach((node) => expandNode(node, true));\n      } else {\n        expandingNode.value = null;\n      }\n      oldNodes.forEach((node) => node.doCheck(false));\n      newNodes.forEach((node) => node.doCheck(true));\n      checkedNodes.value = newNodes;\n      nextTick(scrollToExpandingNode);\n    };\n    const scrollToExpandingNode = () => {\n      if (isServer)\n        return;\n      menuList.value.forEach((menu) => {\n        const menuElement = menu == null ? void 0 : menu.$el;\n        if (menuElement) {\n          const container = menuElement.querySelector(\".el-scrollbar__wrap\");\n          const activeNode = menuElement.querySelector(\".el-cascader-node.is-active\") || menuElement.querySelector(\".el-cascader-node.in-active-path\");\n          scrollIntoView(container, activeNode);\n        }\n      });\n    };\n    const handleKeyDown = (e) => {\n      const target = e.target;\n      const { code } = e;\n      switch (code) {\n        case EVENT_CODE.up:\n        case EVENT_CODE.down:\n          const distance = code === EVENT_CODE.up ? -1 : 1;\n          focusNode(getSibling(target, distance));\n          break;\n        case EVENT_CODE.left:\n          const preMenu = menuList.value[getMenuIndex(target) - 1];\n          const expandedNode = preMenu == null ? void 0 : preMenu.$el.querySelector('.el-cascader-node[aria-expanded=\"true\"]');\n          focusNode(expandedNode);\n          break;\n        case EVENT_CODE.right:\n          const nextMenu = menuList.value[getMenuIndex(target) + 1];\n          const firstNode = nextMenu == null ? void 0 : nextMenu.$el.querySelector('.el-cascader-node[tabindex=\"-1\"]');\n          focusNode(firstNode);\n          break;\n        case EVENT_CODE.enter:\n          checkNode(target);\n          break;\n        case EVENT_CODE.esc:\n        case EVENT_CODE.tab:\n          emit(\"close\");\n          break;\n      }\n    };\n    provide(CASCADER_PANEL_INJECTION_KEY, reactive({\n      config,\n      expandingNode,\n      checkedNodes,\n      isHoverMenu,\n      renderLabelFn,\n      lazyLoad,\n      expandNode,\n      handleCheckChange\n    }));\n    watch([config, () => props.options], initStore, { deep: true, immediate: true });\n    watch(() => props.modelValue, () => {\n      manualChecked = false;\n      syncCheckedValue();\n    });\n    watch(checkedValue, (val) => {\n      if (!isEqual(val, props.modelValue)) {\n        emit(UPDATE_MODEL_EVENT, val);\n        emit(CHANGE_EVENT, val);\n      }\n    });\n    onBeforeUpdate(() => menuList.value = []);\n    onMounted(() => !isEmpty(props.modelValue) && syncCheckedValue());\n    return {\n      menuList,\n      menus,\n      checkedNodes,\n      handleKeyDown,\n      handleCheckChange,\n      getFlattedNodes,\n      getCheckedNodes,\n      clearCheckedNodes,\n      calculateCheckedValue,\n      scrollToExpandingNode\n    };\n  }\n});\n\nfunction render$2(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_cascader_menu = resolveComponent(\"el-cascader-menu\");\n  return openBlock(), createBlock(\"div\", {\n    class: [\n      \"el-cascader-panel\",\n      _ctx.border && \"is-bordered\"\n    ],\n    onKeydown: _cache[1] || (_cache[1] = (...args) => _ctx.handleKeyDown && _ctx.handleKeyDown(...args))\n  }, [\n    (openBlock(true), createBlock(Fragment, null, renderList(_ctx.menus, (menu, index) => {\n      return openBlock(), createBlock(_component_el_cascader_menu, {\n        key: index,\n        ref: (item) => _ctx.menuList[index] = item,\n        index,\n        nodes: menu\n      }, null, 8, [\"index\", \"nodes\"]);\n    }), 128))\n  ], 34);\n}\n\nscript$2.render = render$2;\nscript$2.__file = \"packages/cascader-panel/src/index.vue\";\n\nscript$2.install = (app) => {\n  app.component(script$2.name, script$2);\n};\nconst _CascaderPanel = script$2;\n\nexport default _CascaderPanel;\nexport { CASCADER_PANEL_INJECTION_KEY, CommonProps, DefaultProps, ExpandTrigger, useCascaderConfig };\n"]},"metadata":{},"sourceType":"module"}