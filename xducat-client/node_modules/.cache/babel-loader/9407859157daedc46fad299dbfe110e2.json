{"ast":null,"code":"import { defineComponent, watch, reactive, toRefs, provide, ref, computed, openBlock, createBlock, renderSlot } from 'vue';\nimport mitt from 'mitt';\nconst elFormKey = \"elForm\";\nconst elFormItemKey = \"elFormItem\";\nconst elFormEvents = {\n  addField: \"el.form.addField\",\n  removeField: \"el.form.removeField\"\n};\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nfunction useFormLabelWidth() {\n  const potentialLabelWidthArr = ref([]);\n  const autoLabelWidth = computed(() => {\n    if (!potentialLabelWidthArr.value.length) return \"0\";\n    const max = Math.max(...potentialLabelWidthArr.value);\n    return max ? `${max}px` : \"\";\n  });\n\n  function getLabelWidthIndex(width) {\n    const index = potentialLabelWidthArr.value.indexOf(width);\n\n    if (index === -1) {\n      console.warn(\"[Element Warn][ElementForm]unexpected width \" + width);\n    }\n\n    return index;\n  }\n\n  function registerLabelWidth(val, oldVal) {\n    if (val && oldVal) {\n      const index = getLabelWidthIndex(oldVal);\n      potentialLabelWidthArr.value.splice(index, 1, val);\n    } else if (val) {\n      potentialLabelWidthArr.value.push(val);\n    }\n  }\n\n  function deregisterLabelWidth(val) {\n    const index = getLabelWidthIndex(val);\n    index > -1 && potentialLabelWidthArr.value.splice(index, 1);\n  }\n\n  return {\n    autoLabelWidth,\n    registerLabelWidth,\n    deregisterLabelWidth\n  };\n}\n\nvar script = defineComponent({\n  name: \"ElForm\",\n  props: {\n    model: Object,\n    rules: Object,\n    labelPosition: String,\n    labelWidth: {\n      type: [String, Number],\n      default: \"\"\n    },\n    labelSuffix: {\n      type: String,\n      default: \"\"\n    },\n    inline: Boolean,\n    inlineMessage: Boolean,\n    statusIcon: Boolean,\n    showMessage: {\n      type: Boolean,\n      default: true\n    },\n    size: String,\n    disabled: Boolean,\n    validateOnRuleChange: {\n      type: Boolean,\n      default: true\n    },\n    hideRequiredAsterisk: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"validate\"],\n\n  setup(props, {\n    emit\n  }) {\n    const formMitt = mitt();\n    const fields = [];\n    watch(() => props.rules, () => {\n      fields.forEach(field => {\n        field.removeValidateEvents();\n        field.addValidateEvents();\n      });\n\n      if (props.validateOnRuleChange) {\n        validate(() => ({}));\n      }\n    });\n    formMitt.on(elFormEvents.addField, field => {\n      if (field) {\n        fields.push(field);\n      }\n    });\n    formMitt.on(elFormEvents.removeField, field => {\n      if (field.prop) {\n        fields.splice(fields.indexOf(field), 1);\n      }\n    });\n\n    const resetFields = () => {\n      if (!props.model) {\n        console.warn(\"[Element Warn][Form]model is required for resetFields to work.\");\n        return;\n      }\n\n      fields.forEach(field => {\n        field.resetField();\n      });\n    };\n\n    const clearValidate = (props2 = []) => {\n      const fds = props2.length ? typeof props2 === \"string\" ? fields.filter(field => props2 === field.prop) : fields.filter(field => props2.indexOf(field.prop) > -1) : fields;\n      fds.forEach(field => {\n        field.clearValidate();\n      });\n    };\n\n    const validate = callback => {\n      if (!props.model) {\n        console.warn(\"[Element Warn][Form]model is required for validate to work!\");\n        return;\n      }\n\n      let promise;\n\n      if (typeof callback !== \"function\") {\n        promise = new Promise((resolve, reject) => {\n          callback = function (valid2, invalidFields2) {\n            if (valid2) {\n              resolve(true);\n            } else {\n              reject(invalidFields2);\n            }\n          };\n        });\n      }\n\n      if (fields.length === 0) {\n        callback(true);\n      }\n\n      let valid = true;\n      let count = 0;\n      let invalidFields = {};\n\n      for (const field of fields) {\n        field.validate(\"\", (message, field2) => {\n          if (message) {\n            valid = false;\n          }\n\n          invalidFields = __spreadValues(__spreadValues({}, invalidFields), field2);\n\n          if (++count === fields.length) {\n            callback(valid, invalidFields);\n          }\n        });\n      }\n\n      return promise;\n    };\n\n    const validateField = (props2, cb) => {\n      props2 = [].concat(props2);\n      const fds = fields.filter(field => props2.indexOf(field.prop) !== -1);\n\n      if (!fields.length) {\n        console.warn(\"[Element Warn]please pass correct props!\");\n        return;\n      }\n\n      fds.forEach(field => {\n        field.validate(\"\", cb);\n      });\n    };\n\n    const elForm = reactive(__spreadValues(__spreadProps(__spreadValues({\n      formMitt\n    }, toRefs(props)), {\n      resetFields,\n      clearValidate,\n      validateField,\n      emit\n    }), useFormLabelWidth()));\n    provide(elFormKey, elForm);\n    return {\n      validate,\n      resetFields,\n      clearValidate,\n      validateField\n    };\n  }\n\n});\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(\"form\", {\n    class: [\"el-form\", [_ctx.labelPosition ? \"el-form--label-\" + _ctx.labelPosition : \"\", {\n      \"el-form--inline\": _ctx.inline\n    }]]\n  }, [renderSlot(_ctx.$slots, \"default\")], 2);\n}\n\nscript.render = render;\nscript.__file = \"packages/form/src/form.vue\";\n\nscript.install = app => {\n  app.component(script.name, script);\n};\n\nconst _Form = script;\nexport default _Form;\nexport { elFormEvents, elFormItemKey, elFormKey };","map":{"version":3,"sources":["D:/A-大三下/web开发/xducat/xducat-client/node_modules/element-plus/es/el-form/index.js"],"names":["defineComponent","watch","reactive","toRefs","provide","ref","computed","openBlock","createBlock","renderSlot","mitt","elFormKey","elFormItemKey","elFormEvents","addField","removeField","__defProp","Object","defineProperty","__defProps","defineProperties","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","useFormLabelWidth","potentialLabelWidthArr","autoLabelWidth","length","max","Math","getLabelWidthIndex","width","index","indexOf","console","warn","registerLabelWidth","val","oldVal","splice","push","deregisterLabelWidth","script","name","props","model","rules","labelPosition","String","labelWidth","type","Number","default","labelSuffix","inline","Boolean","inlineMessage","statusIcon","showMessage","size","disabled","validateOnRuleChange","hideRequiredAsterisk","emits","setup","emit","formMitt","fields","forEach","field","removeValidateEvents","addValidateEvents","validate","on","resetFields","resetField","clearValidate","props2","fds","filter","callback","promise","Promise","resolve","reject","valid2","invalidFields2","valid","count","invalidFields","message","field2","validateField","cb","concat","elForm","render","_ctx","_cache","$props","$setup","$data","$options","class","$slots","__file","install","app","component","_Form"],"mappings":"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","sourcesContent":["import { defineComponent, watch, reactive, toRefs, provide, ref, computed, openBlock, createBlock, renderSlot } from 'vue';\nimport mitt from 'mitt';\n\nconst elFormKey = \"elForm\";\nconst elFormItemKey = \"elFormItem\";\nconst elFormEvents = {\n  addField: \"el.form.addField\",\n  removeField: \"el.form.removeField\"\n};\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nfunction useFormLabelWidth() {\n  const potentialLabelWidthArr = ref([]);\n  const autoLabelWidth = computed(() => {\n    if (!potentialLabelWidthArr.value.length)\n      return \"0\";\n    const max = Math.max(...potentialLabelWidthArr.value);\n    return max ? `${max}px` : \"\";\n  });\n  function getLabelWidthIndex(width) {\n    const index = potentialLabelWidthArr.value.indexOf(width);\n    if (index === -1) {\n      console.warn(\"[Element Warn][ElementForm]unexpected width \" + width);\n    }\n    return index;\n  }\n  function registerLabelWidth(val, oldVal) {\n    if (val && oldVal) {\n      const index = getLabelWidthIndex(oldVal);\n      potentialLabelWidthArr.value.splice(index, 1, val);\n    } else if (val) {\n      potentialLabelWidthArr.value.push(val);\n    }\n  }\n  function deregisterLabelWidth(val) {\n    const index = getLabelWidthIndex(val);\n    index > -1 && potentialLabelWidthArr.value.splice(index, 1);\n  }\n  return {\n    autoLabelWidth,\n    registerLabelWidth,\n    deregisterLabelWidth\n  };\n}\nvar script = defineComponent({\n  name: \"ElForm\",\n  props: {\n    model: Object,\n    rules: Object,\n    labelPosition: String,\n    labelWidth: {\n      type: [String, Number],\n      default: \"\"\n    },\n    labelSuffix: {\n      type: String,\n      default: \"\"\n    },\n    inline: Boolean,\n    inlineMessage: Boolean,\n    statusIcon: Boolean,\n    showMessage: {\n      type: Boolean,\n      default: true\n    },\n    size: String,\n    disabled: Boolean,\n    validateOnRuleChange: {\n      type: Boolean,\n      default: true\n    },\n    hideRequiredAsterisk: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: [\"validate\"],\n  setup(props, { emit }) {\n    const formMitt = mitt();\n    const fields = [];\n    watch(() => props.rules, () => {\n      fields.forEach((field) => {\n        field.removeValidateEvents();\n        field.addValidateEvents();\n      });\n      if (props.validateOnRuleChange) {\n        validate(() => ({}));\n      }\n    });\n    formMitt.on(elFormEvents.addField, (field) => {\n      if (field) {\n        fields.push(field);\n      }\n    });\n    formMitt.on(elFormEvents.removeField, (field) => {\n      if (field.prop) {\n        fields.splice(fields.indexOf(field), 1);\n      }\n    });\n    const resetFields = () => {\n      if (!props.model) {\n        console.warn(\"[Element Warn][Form]model is required for resetFields to work.\");\n        return;\n      }\n      fields.forEach((field) => {\n        field.resetField();\n      });\n    };\n    const clearValidate = (props2 = []) => {\n      const fds = props2.length ? typeof props2 === \"string\" ? fields.filter((field) => props2 === field.prop) : fields.filter((field) => props2.indexOf(field.prop) > -1) : fields;\n      fds.forEach((field) => {\n        field.clearValidate();\n      });\n    };\n    const validate = (callback) => {\n      if (!props.model) {\n        console.warn(\"[Element Warn][Form]model is required for validate to work!\");\n        return;\n      }\n      let promise;\n      if (typeof callback !== \"function\") {\n        promise = new Promise((resolve, reject) => {\n          callback = function(valid2, invalidFields2) {\n            if (valid2) {\n              resolve(true);\n            } else {\n              reject(invalidFields2);\n            }\n          };\n        });\n      }\n      if (fields.length === 0) {\n        callback(true);\n      }\n      let valid = true;\n      let count = 0;\n      let invalidFields = {};\n      for (const field of fields) {\n        field.validate(\"\", (message, field2) => {\n          if (message) {\n            valid = false;\n          }\n          invalidFields = __spreadValues(__spreadValues({}, invalidFields), field2);\n          if (++count === fields.length) {\n            callback(valid, invalidFields);\n          }\n        });\n      }\n      return promise;\n    };\n    const validateField = (props2, cb) => {\n      props2 = [].concat(props2);\n      const fds = fields.filter((field) => props2.indexOf(field.prop) !== -1);\n      if (!fields.length) {\n        console.warn(\"[Element Warn]please pass correct props!\");\n        return;\n      }\n      fds.forEach((field) => {\n        field.validate(\"\", cb);\n      });\n    };\n    const elForm = reactive(__spreadValues(__spreadProps(__spreadValues({\n      formMitt\n    }, toRefs(props)), {\n      resetFields,\n      clearValidate,\n      validateField,\n      emit\n    }), useFormLabelWidth()));\n    provide(elFormKey, elForm);\n    return {\n      validate,\n      resetFields,\n      clearValidate,\n      validateField\n    };\n  }\n});\n\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  return openBlock(), createBlock(\"form\", {\n    class: [\"el-form\", [\n      _ctx.labelPosition ? \"el-form--label-\" + _ctx.labelPosition : \"\",\n      { \"el-form--inline\": _ctx.inline }\n    ]]\n  }, [\n    renderSlot(_ctx.$slots, \"default\")\n  ], 2);\n}\n\nscript.render = render;\nscript.__file = \"packages/form/src/form.vue\";\n\nscript.install = (app) => {\n  app.component(script.name, script);\n};\nconst _Form = script;\n\nexport default _Form;\nexport { elFormEvents, elFormItemKey, elFormKey };\n"]},"metadata":{},"sourceType":"module"}