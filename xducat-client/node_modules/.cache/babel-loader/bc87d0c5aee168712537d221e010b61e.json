{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-78f7c938\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cats, item => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: item\n    }, [_createElementVNode(\"table\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"img\", {\n      class: \"catImg\",\n      src: require('../../img/catProfile/' + item.img),\n      alt: \"猫咪图片\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_1)]), _createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, \"猫咪颜色：\" + _toDisplayString(item.color), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, \"出现地点：\" + _toDisplayString(item.location), 1\n    /* TEXT */\n    )])]), _createCommentVNode(\" 如果只是简单的写地址是没有办法显示图片的 \")]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;;;;;uBAIEA,oBAeQ,OAfR,EAeQ,IAfR,EAeQ,oBAdNA,oBAaKC,SAbL,EAaK,IAbL,EAaKC,YAbcC,UAad,EAbMC,IAAY,IAAR;yBAAfJ,oBAaK,IAbL,EAaK;AAbqBK,SAAG,EAAED;AAa1B,KAbL,EAAmC,CAEjCE,oBAQQ,OARR,EAQQ,IARR,EAQQ,CAPNA,oBAA6F,IAA7F,EAA6F,IAA7F,EAA6F,CAAzFA,oBAAoF,KAApF,EAAoF;AAA/EC,WAAK,EAAC,QAAyE;AAA/DC,SAAG,EAAEC,OAAO,2BAA2BL,IAAI,CAACM,GAAhC,CAAmD;AAAbC,SAAG,EAAC;AAAS,KAApF;;AAAA,iBAAyF,CAA7F,CAOM,EANNL,oBAGK,IAHL,EAGK,IAHL,EAGK,CAFHA,oBAA8B,IAA9B,EAA8B,IAA9B,EAAI,UAAKM,iBAAGR,IAAI,CAACS,KAAR,CAAT,EAAsB;AAAA;AAAtB,KAEG,EADHP,oBAAiC,IAAjC,EAAiC,IAAjC,EAAI,UAAKM,iBAAGR,IAAI,CAACU,QAAR,CAAT,EAAyB;AAAA;AAAzB,KACG,CAHL,CAMM,CARR,CAFiC,EAYjCC,6CAZiC,CAAnC;GAaK,CAbL;;AAAA,GAcM,EAfR","names":["_createElementBlock","_Fragment","_renderList","$data","item","key","_createElementVNode","class","src","require","img","alt","_toDisplayString","color","location","_createCommentVNode"],"sourceRoot":"","sources":["F:\\XDUcat\\XDUcat-client\\src\\views\\SearchResultView.vue"],"sourcesContent":["<template>\r\n\r\n\r\n\r\n  <table>\r\n    <tr v-for=\"item in cats\" :key=\"item\">\r\n\r\n      <table>\r\n        <tr><img class=\"catImg\" :src=\"require('../../img/catProfile/' + item.img)\" alt=\"猫咪图片\" /></tr>\r\n        <tr>\r\n          <td>猫咪颜色：{{ item.color }}</td>\r\n          <td>出现地点：{{ item.location }}</td>\r\n        </tr>\r\n\r\n\r\n      </table>\r\n\r\n      <!-- 如果只是简单的写地址是没有办法显示图片的 -->\r\n    </tr>\r\n  </table>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n.catImg{\r\n  width: 150px;\r\n  height: 150px;\r\n}\r\n\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      cats: [],\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    this.getResult();\r\n  },\r\n\r\n  methods: {\r\n    getResult() {\r\n      this.$axios\r\n        .post(\r\n          \"http://localhost:8888/cat/findCatByColor/\" + this.$route.query.color\r\n        )\r\n        .then((resp) => {\r\n          this.cats = resp.data;\r\n        });\r\n    },\r\n  },\r\n\r\n    // 当输入的猫改变时，这里刷新页面\r\n    // 这里写的很复杂是因为为了让刷新页面自然些\r\n  watch: {\r\n    $route: {\r\n      handler: function (val, oldVal) {\r\n          if(val.path == oldVal.path)\r\n          {\r\n              if(val.query.color != oldVal.query.color){\r\n                  this.$router.replace(\"/refresh\");\r\n              }\r\n          }\r\n      },\r\n    },\r\n  },\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}