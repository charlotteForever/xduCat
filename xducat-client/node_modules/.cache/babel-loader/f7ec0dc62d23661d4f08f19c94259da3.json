{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-78f7c938\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = [\"src\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.cats, item => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: item\n    }, [_createElementVNode(\"table\", {\n      onClick: $event => $options.getDetail(item)\n    }, [_createCommentVNode(\" 如果只是简单的写地址是没有办法显示图片的 \"), _createElementVNode(\"tr\", null, [_createElementVNode(\"img\", {\n      class: \"catImg\",\n      src: require('../../img/catProfile/' + item.img),\n      alt: \"猫咪图片\"\n    }, null, 8\n    /* PROPS */\n    , _hoisted_2)]), _createElementVNode(\"tr\", null, \"猫咪颜色：\" + _toDisplayString(item.color), 1\n    /* TEXT */\n    ), _createElementVNode(\"tr\", null, \"出现地点：\" + _toDisplayString(item.location), 1\n    /* TEXT */\n    )], 8\n    /* PROPS */\n    , _hoisted_1)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))]);\n}","map":{"version":3,"mappings":";;;;;;;uBAGEA,oBASQ,OATR,EASQ,IATR,EASQ,oBARNA,oBAOKC,SAPL,EAOK,IAPL,EAOKC,YAPcC,UAOd,EAPMC,IAAY,IAAR;yBAAfJ,oBAOK,IAPL,EAOK;AAPqBK,SAAG,EAAED;AAO1B,KAPL,EAAmC,CACjCE,oBAIQ,OAJR,EAIQ;AAJAC,aAAK,YAAEC,mBAAUJ,IAAV;AAIP,KAJR,GAAgCK,+CAC9BH,oBAA6F,IAA7F,EAA6F,IAA7F,EAA6F,CAAzFA,oBAAoF,KAApF,EAAoF;AAA/EI,WAAK,EAAC,QAAyE;AAA/DC,SAAG,EAAEC,OAAO,2BAA2BR,IAAI,CAACS,GAAhC,CAAmD;AAAbC,SAAG,EAAC;AAAS,KAApF;;AAAA,iBAAyF,CAA7F,GACAR,oBAA8B,IAA9B,EAA8B,IAA9B,EAAI,UAAKS,iBAAGX,IAAI,CAACY,KAAR,CAAT,EAAsB;AAAA;AAAtB,OACAV,oBAAiC,IAAjC,EAAiC,IAAjC,EAAI,UAAKS,iBAAGX,IAAI,CAACa,QAAR,CAAT,EAAyB;AAAA;AAAzB,MAHF;;AAAA,iBADiC,CAAnC;GAOK,CAPL;;AAAA,GAQM,EATR","names":["_createElementBlock","_Fragment","_renderList","$data","item","key","_createElementVNode","onClick","$options","_createCommentVNode","class","src","require","img","alt","_toDisplayString","color","location"],"sourceRoot":"","sources":["D:\\A-大三下\\web开发\\xducat\\xducat-client\\src\\views\\SearchResultView.vue"],"sourcesContent":["<template>\n\n\n  <table>\n    <tr v-for=\"item in cats\" :key=\"item\">\n      <table @click=\"getDetail(item)\"><!-- 如果只是简单的写地址是没有办法显示图片的 -->\n        <tr><img class=\"catImg\" :src=\"require('../../img/catProfile/' + item.img)\" alt=\"猫咪图片\" /></tr>\n        <tr>猫咪颜色：{{ item.color }}</tr>\n        <tr>出现地点：{{ item.location }}</tr>\n      </table>\n      \n    </tr>\n  </table>\n</template>\n\n<style scoped>\n\n.catImg{\n  width: 150px;\n  height: 150px;\n}\n\n</style>\n\n<script>\nexport default {\n  data() {\n    return {\n      cats: [],\n    };\n  },\n\n  mounted() {\n    this.getResult();\n  },\n\n  methods: {\n    getResult() {\n      this.$axios\n        .post(\n          \"http://localhost:8888/cat/findCatByColor/\" + this.$route.query.color\n        )\n        .then((resp) => {\n          this.cats = resp.data;\n        });\n    },\n    // 点击猫咪项跳转到详情页面\n    getDetail(item){\n      console.log(item.id);\n      this.$router.push({\n        path: \"/catDetail\",\n        query: { id: item.id },\n      });\n    }\n  },\n\n    // 当输入的猫改变时，这里刷新页面\n    // 这里写的很复杂是因为为了让刷新页面自然些\n  watch: {\n    $route: {\n      handler: function (val, oldVal) {\n          if(val.path == oldVal.path)\n          {\n              if(val.query.color != oldVal.query.color){\n                  this.$router.replace(\"/refresh\");\n              }\n          }\n      },\n    },\n  },\n};\n</script>\n\n"]},"metadata":{},"sourceType":"module"}