{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_skeleton = _resolveComponent(\"el-skeleton\");\n\n  const _component_el_skeleton_item = _resolveComponent(\"el-skeleton-item\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" 这个页面是为了做刷新页面的过渡页面 \"), _createVNode(_component_el_skeleton), _hoisted_1, _createVNode(_component_el_skeleton, {\n    style: {\n      \"--el-skeleton-circle-size\": \"100px\"\n    }\n  }, {\n    template: _withCtx(() => [_createVNode(_component_el_skeleton_item, {\n      variant: \"circle\"\n    })]),\n    _: 1\n    /* STABLE */\n\n  })], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCAGEA,oBAAM,IAAN,EAAM,IAAN,EAAM,IAAN,EAAM;AAAA;AAAN;;;;;;;6DAFFC,4CACEC,aAAeC,sBAAf,GACAC,YACAF,aAIcC,sBAJd,EAIc;AAJDE,SAAwC,EAAxC;AAAA;AAAA;AAIC,GAJd,EAAqD;AACxCC,YAAQ,WACjB,MAAqC,CAArCJ,aAAqCK,2BAArC,EAAqC;AAAnBC,aAAO,EAAC;AAAW,KAArC,CAAqC,CADpB,CADgC;;;;AAAA,GAArD","names":["_createElementVNode","_createCommentVNode","_createVNode","_component_el_skeleton","_hoisted_1","style","template","_component_el_skeleton_item","variant"],"sourceRoot":"","sources":["F:\\XDUcat\\XDUcat-client\\src\\views\\RefreshView.vue"],"sourcesContent":["<template>\r\n<!-- 这个页面是为了做刷新页面的过渡页面 -->\r\n  <el-skeleton />\r\n  <br />\r\n  <el-skeleton style=\"--el-skeleton-circle-size: 100px\">\r\n    <template #template>\r\n      <el-skeleton-item variant=\"circle\" />\r\n    </template>\r\n  </el-skeleton>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  beforeRouteEnter(to, from, next) {\r\n    next(vm => {\r\n      vm.$router.replace(from)\r\n    })\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}